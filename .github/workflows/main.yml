name: Python application

on: [push]

env:
  POETRY_VERSION: 1.0.0
  WORK_DIR: ./punctuator


jobs:
  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        PYTHON_VERSION: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up cache
      uses: actions/cache@v1
      with:
        path: ${{ env.WORK_DIR }}/.venv
        key: venv-${{ runner.os }}-${{ matrix.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}
        restore_keys: |
          venv-${{ runner.os }}-${{ matrix.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}
          venv-${{ runner.os }}-${{ matrix.PYTHON_VERSION }}-

    - name: Install libraries
      uses: abatilo/actions-poetry@v1.5.0
      with:
        python_version: ${{ matrix.PYTHON_VERSION }}
        poetry_version: ${{ env.POETRY_VERSION }}
        working_directory: ${{ env.WORK_DIR }}
        args: install

    - name: Lint with flake8
      uses: abatilo/actions-poetry@v1.5.0
      with:
        python_version: ${{ matrix.PYTHON_VERSION }}
        poetry_version: ${{ env.POETRY_VERSION }}
        working_directory: ${{ env.WORK_DIR }}
        args: run flake8 punctuator

    - name: Format check with yapf
      uses: abatilo/actions-poetry@v1.5.0
      with:
        python_version: ${{ matrix.PYTHON_VERSION }}
        poetry_version: ${{ env.POETRY_VERSION }}
        working_directory: ${{ env.WORK_DIR }}
        args: run yapf -r -d --style pep8 punctuator

    - name: Import check with isort
      uses: abatilo/actions-poetry@v1.5.0
      with:
        python_version: ${{ matrix.PYTHON_VERSION }}
        poetry_version: ${{ env.POETRY_VERSION }}
        working_directory: ${{ env.WORK_DIR }}
        args: run isort -rc -d -c punctuator

